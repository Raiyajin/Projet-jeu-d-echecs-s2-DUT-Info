package fr.raiyajin.projet_echec;

public abstract class Piece {
	String nom;
	String apparence;
	int x;
	int y;
	
	
	public Piece() {
		nom = "undefined";
		apparence = "undefined";
		
	}

	
	public Piece(String nom, String app) {
		this.nom = nom;
		this.apparence = app;
		
	}
	
	public String getNom() {
		return this.nom;
		
	}
	
	public void setNom(String nom) {
		this.nom = nom;
		
	}
	
	public String getApparence() {
		return this.apparence;
		
	}
	
	public void setApparence(String apparence) {
		this.apparence = apparence;
		
	}
	
	public String toString() {
		String s ;
		s= new String ("Nom pi√®ce : "+this.nom + "Apparence :" + this.apparence);
		return s ;
	}
	
	public int getX() {
		return this.x;
	}

	void setX(int newX) {
		this.x = newX;
	}

	public int getY() {
		return this.y;
	}

	void setY(int newY) {
		this.y = newY;
	}
	
	public abstract int coupPossible(int x, int y, int x2, int y2);


	
	public int deplacement(int x, int y, Piece other) {
		if (this.coupPossible(x, y) != true) {
			return -1;
		}

		Color color = this.getColor();
		int originX = this.getX();
		int originY = this.getY();

		if (this.getColor() == Color.WHITE) {
			Board.black.remove(other);
		} else {
			Board.white.remove(other);
		}

		Board.setPiece(originX, originY, null);
		Board.setPiece(x, y, this);

		boolean isFirstMoveOG = this.isFirstMove;
		this.isFirstMove = false;

		if (Board.checkForCheck(color) == true) {
			if (other != null) {
				if (this.getColor() == Color.WHITE) {
					Board.black.add(other);
				} else {
					Board.white.add(other);
				}
			}
			Board.setPiece(originX, originY, this);
			Board.setPiece(x, y, other);
			this.isFirstMove = isFirstMoveOG;

			return -1;
		}
	}
	
	public void manger() {
		//TODO
	}
}